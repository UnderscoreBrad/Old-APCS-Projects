/*
THIS IS FOR APCS
APCS WITH THE HANLEY

Three Hanleys for the Elven-kings under the sky,
Seven for the Dwarf-lords in their halls of stone,
Nine for Mortal Men doomed to die,
One for the Dark Lord on his dark throne
In the Land of Mordor where the Shadows lie.

One Hanley to rule them all, One Hanley to find them,
One Hanley to bring them all and in the darkness bind them
In the Land of Mordor where the Shadows lie.

Project Author:         Brad Estus
Project Group/Topic:    APCS Summer Work
Project Type:           Swing GUI Application
Date Completed:         Aug. 04, 2018
Date Due:               Aug. 30, 2018
 */
public class TriangleFinderSwing extends javax.swing.JFrame {

    /**
     * Creates new form TriangleFinderSwing
     */
    public TriangleFinderSwing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        s3Box = new javax.swing.JTextField();
        s1Box = new javax.swing.JTextField();
        s2Box = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        checkButton = new javax.swing.JButton();
        errBox = new javax.swing.JLabel();
        triMessage = new javax.swing.JLabel();
        triType = new javax.swing.JLabel();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1920, 1080));
        setPreferredSize(new java.awt.Dimension(800, 450));
        getContentPane().setLayout(null);

        s3Box.setText(" ");
        s3Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s3BoxActionPerformed(evt);
            }
        });
        getContentPane().add(s3Box);
        s3Box.setBounds(20, 200, 160, 40);

        s1Box.setText(" ");
        s1Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1BoxActionPerformed(evt);
            }
        });
        getContentPane().add(s1Box);
        s1Box.setBounds(20, 100, 160, 40);

        s2Box.setText(" ");
        s2Box.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s2BoxActionPerformed(evt);
            }
        });
        getContentPane().add(s2Box);
        s2Box.setBounds(20, 150, 160, 40);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Side Lengths:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 80, 160, 15);

        checkButton.setText("Check Triangularity");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });
        getContentPane().add(checkButton);
        checkButton.setBounds(20, 300, 160, 50);

        errBox.setText(" ");
        getContentPane().add(errBox);
        errBox.setBounds(30, 250, 140, 30);

        triMessage.setText(" ");
        getContentPane().add(triMessage);
        triMessage.setBounds(200, 100, 250, 60);
        getContentPane().add(triType);
        triType.setBounds(200, 180, 270, 60);

        reset.setText("RESET");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset);
        reset.setBounds(66, 30, 70, 25);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void s3BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s3BoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s3BoxActionPerformed

    private void s1BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1BoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s1BoxActionPerformed

    private void s2BoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s2BoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_s2BoxActionPerformed

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed

        String tempa = s1Box.getText();
        String tempb = s2Box.getText();
        String tempc = s3Box.getText();
        double s1 = 0;
        double s2 = 0;
        double s3 = 0;
        try {
            s1 = Double.parseDouble(tempa);
        } catch (NumberFormatException ignore) {
            errBox.setText("Please Enter Only Numbers.");
        }
        try {
            s2 = Double.parseDouble(tempb);
        } catch (NumberFormatException ignore) {
            errBox.setText("Please Enter Only Numbers.");
        }
        try {
            s3 = Double.parseDouble(tempc);
        } catch (NumberFormatException ignore) {
            errBox.setText("Please Enter Only Numbers.");
        }

        boolean isTriangle = false;
        double longest = Math.max(s1, s2);
        longest = Math.max(s3, longest);
        double smallerSum = (s1 + s2 + s3) - longest;
        if (s1 <= 0 || s2 <= 0 || s3 <= 0) {
            System.out.println("Please enter only positive length values.");
        } else if (longest < smallerSum) {
            isTriangle = true;
            triMessage.setText("This is a triangle.");
            if (s1 == s2 && s2 == s3) {
                triType.setText("The triangle is equilateral.");
            } else if (s1 == s2 || s2 == s3 || s1 == s3) {
                triType.setText("The triangle is isoceles.");
            } else if (s1 != s2 && s2 != s3 && s1 != s3) {
                triType.setText("The triangle is scalene.");
            }
        } else {
            triType.setText("This is not a triangle.");
        }
    }//GEN-LAST:event_checkButtonActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        s1Box.setText("");
        s2Box.setText("");
        s3Box.setText("");
        errBox.setText("");
        triMessage.setText("");
        triType.setText("");    }//GEN-LAST:event_resetActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TriangleFinderSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TriangleFinderSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TriangleFinderSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TriangleFinderSwing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TriangleFinderSwing().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton checkButton;
    private javax.swing.JLabel errBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton reset;
    private javax.swing.JTextField s1Box;
    private javax.swing.JTextField s2Box;
    private javax.swing.JTextField s3Box;
    private javax.swing.JLabel triMessage;
    private javax.swing.JLabel triType;
    // End of variables declaration//GEN-END:variables
}
